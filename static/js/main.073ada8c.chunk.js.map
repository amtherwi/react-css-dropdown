{"version":3,"sources":["../../src/index.tsx","App.tsx","index.tsx"],"names":["Dropdown","options","defaultSelection","name","isActive","handleSelect","containerClass","selectClass","arrowClass","className","clsx","styles","defaultValue","onChange","disabled","value","key","index","tabIndex","App","props","event","console","log","ReactDOM","render","document","getElementById"],"mappings":"kTAcaA,EAA2C,SAAC,G,IACvDC,Y,IACAC,4BAAmBA,EAAA,CAAEC,KAAF,mBAA4BC,UAAU,GAAtC,EACnBC,iBACAC,mBACAC,gBACAC,eAEA,OACE,yBAAKC,UAAWC,YAAKC,EAAD,IAClB,4BACEF,UAAWC,YAAKC,EAAD,GACfC,aAAcV,EAAiBC,KAC/BU,SAAUR,GAETH,YACC,4BAAQY,UAAQ,EAACC,MAAOb,EAAiBC,MACtCD,EAPP,MAUGD,EAAA,KAAY,kBAAGE,EAAH,OAASY,EAAT,qBAAgBD,OAAhB,gBACX,4BAAQE,IAAKC,EAAOF,MAAOA,EAAOD,SAAUA,GADjC,OAMf,0BAAML,UAAWC,YAAKC,EAAD,GAA4BO,SAAU,MCpBlDC,G,MAfH,WACV,IAAMC,EAAQ,CACZnB,QAAS,CACP,CAAEE,KAAM,WAAYY,MAAO,KAC3B,CAAEZ,KAAM,WAAYY,MAAO,KAC3B,CAAEZ,KAAM,WAAYY,MAAO,KAC3B,CAAEZ,KAAM,WAAYY,MAAO,IAAKD,UAAU,IAE5CT,aAAc,SAACgB,GACbC,QAAQC,IAAIF,KAGhB,OAAO,kBAAC,EAAaD,KCXvBI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.073ada8c.chunk.js","sourcesContent":["import React from 'react'\nimport clsx from 'clsx'\n\nimport styles from './styles.module.css'\n\ninterface Props {\n  containerClass?: string\n  selectClass?: string\n  arrowClass?: string\n  defaultSelection?: { name?: string; isActive?: boolean }\n  options: { name: string; value: string | number; disabled?: boolean }[]\n  handleSelect: (event: React.ChangeEvent<HTMLSelectElement>) => any\n}\n\nexport const Dropdown: React.FunctionComponent<Props> = ({\n  options,\n  defaultSelection = { name: 'Choose selection', isActive: true },\n  handleSelect,\n  containerClass,\n  selectClass,\n  arrowClass\n}) => {\n  return (\n    <div className={clsx(styles.selectContainer, containerClass)}>\n      <select\n        className={clsx(styles.select, selectClass)}\n        defaultValue={defaultSelection.name}\n        onChange={handleSelect}\n      >\n        {defaultSelection.isActive && (\n          <option disabled value={defaultSelection.name}>\n            {defaultSelection.name}\n          </option>\n        )}\n        {options.map(({ name, value, disabled = false }, index) => (\n          <option key={index} value={value} disabled={disabled}>\n            {name}\n          </option>\n        ))}\n      </select>\n      <span className={clsx(styles.arrow, arrowClass)} tabIndex={0} />\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { Dropdown } from 'react-css-dropdown'\nimport 'react-css-dropdown/dist/index.css'\n\nconst App = () => {\n  const props = {\n    options: [\n      { name: 'Option 1', value: '1' },\n      { name: 'Option 2', value: '2' },\n      { name: 'Option 3', value: '3' },\n      { name: 'Option 4', value: '4', disabled: true }\n    ],\n    handleSelect: (event: React.ChangeEvent<HTMLSelectElement>) => {\n      console.log(event)\n    }\n  }\n  return <Dropdown {...props} />\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}